{"version":3,"sources":["webpack:///./src/players/Wistia.js"],"names":["Wistia","callPlayer","props","config","playerId","randomString","onPlay","onPause","onSeek","onEnded","onPlaybackRateChange","this","onMount","url","playing","muted","controls","onReady","onError","getSDK","then","customControls","forEach","control","defineControl","window","_wq","push","id","playerID","options","autoPlay","silentAutoPlay","controlsVisibleOnLoad","fullscreenButton","playbar","playbackRateControl","qualityControl","volumeControl","settingsControl","smallPlayButton","player","unbind","bind","seconds","fraction","rate","videoID","match","MATCH_URL_WISTIA","className","key","style","width","height","Component","canPlay","wistia"],"mappings":"4oEAKA,IAIqBA,E,uaAINC,K,kBACF,EAAKC,MAAMC,OAAOC,UAAlB,UAPY,kBAOZ,OAAoDC,gB,iBAoDtD,wBAAa,IAAKH,OAAMI,OAAX,sB,kBACZ,wBAAa,IAAKJ,OAAMK,QAAX,sB,iBACd,wBAAa,IAAKL,OAAMM,OAAX,sB,kBACZ,wBAAa,IAAKN,OAAMO,QAAX,sB,+BACA,wBAAa,IAAKP,OAAMQ,qBAAX,sB,eAuB7B,WACL,EAAKT,WAAW,W,iBAGT,WACP,EAAKA,WAAW,a,2DAjFhBU,KAAKT,MAAMU,SAAWD,KAAKT,MAAMU,QAAQD,Q,2BAGrCE,GAAK,aACsDF,KAAKT,MAA5DY,EADC,EACDA,QAASC,EADR,EACQA,MAAOC,EADf,EACeA,SAAUC,EADzB,EACyBA,QAASd,EADlC,EACkCA,OAAQe,EAD1C,EAC0CA,QACnDC,YAjBY,kDACG,UAgBaC,MAAK,SAAApB,GAC3BG,EAAOkB,gBACTlB,EAAOkB,eAAeC,SAAQ,SAAAC,GAAO,OAAIvB,EAAOwB,cAAcD,MAEhEE,OAAOC,IAAMD,OAAOC,KAAO,GAC3BD,OAAOC,IAAIC,KAAK,CACdC,GAAI,EAAKC,SACTC,QAAS,EAAF,CACLC,SAAUjB,EACVkB,eAAgB,QAChBjB,MAAOA,EACPkB,sBAAuBjB,EACvBkB,iBAAkBlB,EAClBmB,QAASnB,EACToB,oBAAqBpB,EACrBqB,eAAgBrB,EAChBsB,cAAetB,EACfuB,gBAAiBvB,EACjBwB,gBAAiBxB,GACdb,EAAO2B,SAEZb,QAAS,SAAAwB,GACP,EAAKA,OAASA,EACd,EAAKC,SACL,EAAKD,OAAOE,KAAK,OAAQ,EAAKrC,QAC9B,EAAKmC,OAAOE,KAAK,QAAS,EAAKpC,SAC/B,EAAKkC,OAAOE,KAAK,OAAQ,EAAKnC,QAC9B,EAAKiC,OAAOE,KAAK,MAAO,EAAKlC,SAC7B,EAAKgC,OAAOE,KAAK,qBAAsB,EAAKjC,sBAC5CO,SAGHC,K,+BAIHP,KAAK8B,OAAOC,OAAO,OAAQ/B,KAAKL,QAChCK,KAAK8B,OAAOC,OAAO,QAAS/B,KAAKJ,SACjCI,KAAK8B,OAAOC,OAAO,OAAQ/B,KAAKH,QAChCG,KAAK8B,OAAOC,OAAO,MAAO/B,KAAKF,SAC/BE,KAAK8B,OAAOC,OAAO,qBAAsB/B,KAAKD,wB,6BAW9CC,KAAKV,WAAW,U,8BAIhBU,KAAKV,WAAW,W,6BAIhBU,KAAK+B,SACL/B,KAAKV,WAAW,Y,6BAGV2C,GACNjC,KAAKV,WAAW,OAAQ2C,K,gCAGfC,GACTlC,KAAKV,WAAW,SAAU4C,K,sCAWXC,GACfnC,KAAKV,WAAW,eAAgB6C,K,oCAIhC,OAAOnC,KAAKV,WAAW,c,uCAIvB,OAAOU,KAAKV,WAAW,U,yCAIvB,OAAO,O,+BAGC,IACAY,EAAQF,KAAKT,MAAbW,IACFkC,EAAUlC,GAAOA,EAAImC,MAAMC,KAAkB,GAC7CC,EAAY,6BAAH,OAAgCH,GAK/C,OACE,yBAAKnB,GAAIjB,KAAKkB,SAAUsB,IAAKJ,EAASG,UAAWA,EAAWE,MALhD,CACZC,MAAO,OACPC,OAAQ,e,8BAlHsBC,a,EAAfvD,E,cACE,U,EADFA,E,UAEFwD,IAAQC,Q,EAFNzD,E,eAGE","file":"12.app.js","sourcesContent":["import React, { Component } from 'react'\n\nimport { callPlayer, getSDK, randomString } from '../utils'\nimport { canPlay, MATCH_URL_WISTIA } from '../patterns'\n\nconst SDK_URL = 'https://fast.wistia.com/assets/external/E-v1.js'\nconst SDK_GLOBAL = 'Wistia'\nconst PLAYER_ID_PREFIX = 'wistia-player-'\n\nexport default class Wistia extends Component {\n  static displayName = 'Wistia'\n  static canPlay = canPlay.wistia\n  static loopOnEnded = true\n  callPlayer = callPlayer\n  playerID = this.props.config.playerId || `${PLAYER_ID_PREFIX}${randomString()}`\n\n  componentDidMount () {\n    this.props.onMount && this.props.onMount(this)\n  }\n\n  load (url) {\n    const { playing, muted, controls, onReady, config, onError } = this.props\n    getSDK(SDK_URL, SDK_GLOBAL).then(Wistia => {\n      if (config.customControls) {\n        config.customControls.forEach(control => Wistia.defineControl(control))\n      }\n      window._wq = window._wq || []\n      window._wq.push({\n        id: this.playerID,\n        options: {\n          autoPlay: playing,\n          silentAutoPlay: 'allow',\n          muted: muted,\n          controlsVisibleOnLoad: controls,\n          fullscreenButton: controls,\n          playbar: controls,\n          playbackRateControl: controls,\n          qualityControl: controls,\n          volumeControl: controls,\n          settingsControl: controls,\n          smallPlayButton: controls,\n          ...config.options\n        },\n        onReady: player => {\n          this.player = player\n          this.unbind()\n          this.player.bind('play', this.onPlay)\n          this.player.bind('pause', this.onPause)\n          this.player.bind('seek', this.onSeek)\n          this.player.bind('end', this.onEnded)\n          this.player.bind('playbackratechange', this.onPlaybackRateChange)\n          onReady()\n        }\n      })\n    }, onError)\n  }\n\n  unbind () {\n    this.player.unbind('play', this.onPlay)\n    this.player.unbind('pause', this.onPause)\n    this.player.unbind('seek', this.onSeek)\n    this.player.unbind('end', this.onEnded)\n    this.player.unbind('playbackratechange', this.onPlaybackRateChange)\n  }\n\n  // Proxy methods to prevent listener leaks\n  onPlay = (...args) => this.props.onPlay(...args)\n  onPause = (...args) => this.props.onPause(...args)\n  onSeek = (...args) => this.props.onSeek(...args)\n  onEnded = (...args) => this.props.onEnded(...args)\n  onPlaybackRateChange = (...args) => this.props.onPlaybackRateChange(...args)\n\n  play () {\n    this.callPlayer('play')\n  }\n\n  pause () {\n    this.callPlayer('pause')\n  }\n\n  stop () {\n    this.unbind()\n    this.callPlayer('remove')\n  }\n\n  seekTo (seconds) {\n    this.callPlayer('time', seconds)\n  }\n\n  setVolume (fraction) {\n    this.callPlayer('volume', fraction)\n  }\n\n  mute = () => {\n    this.callPlayer('mute')\n  }\n\n  unmute = () => {\n    this.callPlayer('unmute')\n  }\n\n  setPlaybackRate (rate) {\n    this.callPlayer('playbackRate', rate)\n  }\n\n  getDuration () {\n    return this.callPlayer('duration')\n  }\n\n  getCurrentTime () {\n    return this.callPlayer('time')\n  }\n\n  getSecondsLoaded () {\n    return null\n  }\n\n  render () {\n    const { url } = this.props\n    const videoID = url && url.match(MATCH_URL_WISTIA)[1]\n    const className = `wistia_embed wistia_async_${videoID}`\n    const style = {\n      width: '100%',\n      height: '100%'\n    }\n    return (\n      <div id={this.playerID} key={videoID} className={className} style={style} />\n    )\n  }\n}\n"],"sourceRoot":""}