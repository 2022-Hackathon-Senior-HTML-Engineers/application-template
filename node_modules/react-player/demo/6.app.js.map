{"version":3,"sources":["webpack:///./src/Preview.js"],"names":["cache","Preview","image","e","key","props","onClick","this","mounted","fetchImage","prevProps","url","light","oEmbedUrl","setState","window","fetch","replace","then","response","json","data","thumbnail_url","playIcon","previewTabIndex","state","flexCenter","display","alignItems","justifyContent","styles","preview","width","height","backgroundImage","undefined","backgroundSize","backgroundPosition","cursor","shadow","background","borderRadius","borderStyle","borderWidth","borderColor","marginLeft","defaultPlayIcon","style","className","tabIndex","onKeyPress","handleKeyPress","Component"],"mappings":"6nEAEA,IAEMA,EAAQ,GAEOC,E,qaACT,G,eACF,CACNC,MAAO,O,yBAwCQ,SAAAC,GACD,UAAVA,EAAEC,KAA6B,MAAVD,EAAEC,KACzB,EAAKC,MAAMC,a,2DAtCbC,KAAKC,SAAU,EACfD,KAAKE,WAAWF,KAAKF,S,yCAGHK,GAAW,MACNH,KAAKF,MAApBM,EADqB,EACrBA,IAAKC,EADgB,EAChBA,MACTF,EAAUC,MAAQA,GAAOD,EAAUE,QAAUA,GAC/CL,KAAKE,WAAWF,KAAKF,S,6CAKvBE,KAAKC,SAAU,I,oCAGsB,WAAzBG,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,UACxB,GAAqB,iBAAVD,EAAX,CAIA,IAAIZ,EAAMW,GAKV,OADAJ,KAAKO,SAAS,CAAEZ,MAAO,OAChBa,OAAOC,MAAMH,EAAUI,QAAQ,QAASN,IAC5CO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,GAAIA,EAAKC,eAAiB,EAAKd,QAAS,CACtC,IAAMN,EAAQmB,EAAKC,cAAcL,QAAQ,aAAc,cACvD,EAAKH,SAAS,CAAEZ,UAChBF,EAAMW,GAAOT,MAVjBK,KAAKO,SAAS,CAAEZ,MAAOF,EAAMW,UAJ7BJ,KAAKO,SAAS,CAAEZ,MAAOU,M,+BAyBjB,MACuCL,KAAKF,MAA5CC,EADA,EACAA,QAASiB,EADT,EACSA,SAAUC,EADnB,EACmBA,gBACnBtB,EAAUK,KAAKkB,MAAfvB,MACFwB,EAAa,CACjBC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAEZC,EAAS,CACbC,QAAS,EAAF,CACLC,MAAO,OACPC,OAAQ,OACRC,gBAAiBhC,EAAQ,OAAH,OAAUA,EAAV,UAAqBiC,EAC3CC,eAAgB,QAChBC,mBAAoB,SACpBC,OAAQ,WACLZ,GAELa,OAAQ,EAAF,CACJC,WAAY,2DACZC,aAzEU,OA0EVT,MA1EU,OA2EVC,OA3EU,QA4EPP,GAELH,SAAU,CACRmB,YAAa,QACbC,YAAa,mBACbC,YAAa,4CACbC,WAAY,QAGVC,EACJ,yBAAKC,MAAOjB,EAAOS,OAAQS,UAAU,wBACnC,yBAAKD,MAAOjB,EAAOP,SAAUyB,UAAU,6BAG3C,OACE,yBACED,MAAOjB,EAAOC,QACdiB,UAAU,wBACV1C,QAASA,EACT2C,SAAUzB,EACV0B,WAAY3C,KAAK4C,gBAEhB5B,GAAYuB,Q,8BA9FgBM","file":"6.app.js","sourcesContent":["import React, { Component } from 'react'\n\nconst ICON_SIZE = '64px'\n\nconst cache = {}\n\nexport default class Preview extends Component {\n  mounted = false\n  state = {\n    image: null\n  }\n\n  componentDidMount () {\n    this.mounted = true\n    this.fetchImage(this.props)\n  }\n\n  componentDidUpdate (prevProps) {\n    const { url, light } = this.props\n    if (prevProps.url !== url || prevProps.light !== light) {\n      this.fetchImage(this.props)\n    }\n  }\n\n  componentWillUnmount () {\n    this.mounted = false\n  }\n\n  fetchImage ({ url, light, oEmbedUrl }) {\n    if (typeof light === 'string') {\n      this.setState({ image: light })\n      return\n    }\n    if (cache[url]) {\n      this.setState({ image: cache[url] })\n      return\n    }\n    this.setState({ image: null })\n    return window.fetch(oEmbedUrl.replace('{url}', url))\n      .then(response => response.json())\n      .then(data => {\n        if (data.thumbnail_url && this.mounted) {\n          const image = data.thumbnail_url.replace('height=100', 'height=480')\n          this.setState({ image })\n          cache[url] = image\n        }\n      })\n  }\n\n  handleKeyPress = e => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      this.props.onClick()\n    }\n  }\n\n  render () {\n    const { onClick, playIcon, previewTabIndex } = this.props\n    const { image } = this.state\n    const flexCenter = {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n    const styles = {\n      preview: {\n        width: '100%',\n        height: '100%',\n        backgroundImage: image ? `url(${image})` : undefined,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        cursor: 'pointer',\n        ...flexCenter\n      },\n      shadow: {\n        background: 'radial-gradient(rgb(0, 0, 0, 0.3), rgba(0, 0, 0, 0) 60%)',\n        borderRadius: ICON_SIZE,\n        width: ICON_SIZE,\n        height: ICON_SIZE,\n        ...flexCenter\n      },\n      playIcon: {\n        borderStyle: 'solid',\n        borderWidth: '16px 0 16px 26px',\n        borderColor: 'transparent transparent transparent white',\n        marginLeft: '7px'\n      }\n    }\n    const defaultPlayIcon = (\n      <div style={styles.shadow} className='react-player__shadow'>\n        <div style={styles.playIcon} className='react-player__play-icon' />\n      </div>\n    )\n    return (\n      <div\n        style={styles.preview}\n        className='react-player__preview'\n        onClick={onClick}\n        tabIndex={previewTabIndex}\n        onKeyPress={this.handleKeyPress}\n      >\n        {playIcon || defaultPlayIcon}\n      </div>\n    )\n  }\n}\n"],"sourceRoot":""}